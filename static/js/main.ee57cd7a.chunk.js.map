{"version":3,"sources":["components/Wrapper.js","components/Screen.js","components/ButtonBox.js","components/Button.js","App.js","index.js"],"names":["Wrapper","children","className","Screen","value","mode","max","ButtonBox","Button","onClick","btnValues","toLocaleString","num","String","removeSpaces","toString","App","useState","sign","res","calc","setCalc","console","log","numClickHandler","e","preventDefault","target","innerHTML","length","Number","commaClickHandler","includes","signClickHandler","equalsClickHandler","a","b","result","math","invertClickHandler","percentClickHandler","parseFloat","resetClickHandler","flat","map","btn","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee57cd7a.chunk.js","sourcesContent":["import \"./Wrapper.css\";\r\n\r\nconst Wrapper = ({ children }) => {\r\n    return <div className=\"wrapper\">{children}</div>;\r\n  };\r\n  \r\n  export default Wrapper;","import { Textfit } from \"react-textfit\";\r\nimport \"./Screen.css\";\r\n\r\nconst Screen = ({ value }) => {\r\n  return (\r\n    <Textfit className=\"screen\" mode=\"single\" max={70}>\r\n      {value}\r\n    </Textfit>\r\n  );\r\n};\r\n\r\nexport default Screen;","import \"./ButtonBox.css\";\r\n\r\nconst ButtonBox = ({ children }) => {\r\n  return <div className=\"buttonBox\">{children}</div>;\r\n};\r\n\r\nexport default ButtonBox;","import \"./Button.css\";\r\n\r\nconst Button = ({ className, value, onClick }) => {\r\n  return (\r\n    <button className={className} onClick={onClick}>\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;","import React, { useState } from \"react\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Screen from \"./components/Screen\";\r\nimport ButtonBox from \"./components/ButtonBox\";\r\nimport Button from \"./components/Button\";\r\n\r\nconst btnValues = [\r\n  [\"C\", \"+-\", \"%\", \"/\"],\r\n  [7, 8, 9, \"X\"],\r\n  [4, 5, 6, \"-\"],\r\n  [1, 2, 3, \"+\"],\r\n  [0, \".\", \"=\"],\r\n];\r\n\r\nconst toLocaleString = (num) => String(num);\r\n\r\nconst removeSpaces = (num) => num.toString();\r\n\r\nconst App = () => {\r\n  let [calc, setCalc] = useState({\r\n    sign: \"\",\r\n    num: 0,\r\n    res: 0,\r\n  });\r\n  console.log(calc);\r\n\r\n  const numClickHandler = (e) => {\r\n    e.preventDefault();\r\n    const value = e.target.innerHTML;\r\n\r\n    if (removeSpaces(calc.num).length < 16) {\r\n      setCalc({\r\n        ...calc,\r\n        num:\r\n          calc.num === 0 && value === \"0\"\r\n            ? \"0\"\r\n            : removeSpaces(calc.num) % 1 === 0\r\n            ? toLocaleString(Number(removeSpaces(calc.num + value)))\r\n            : toLocaleString(calc.num + value),\r\n        res: !calc.sign ? 0 : calc.res,\r\n      });\r\n    }\r\n  };\r\n\r\n  const commaClickHandler = (e) => {\r\n    e.preventDefault();\r\n    const value = e.target.innerHTML;\r\n\r\n    setCalc({\r\n      ...calc,\r\n      num: !calc.num.toString().includes(\".\") ? calc.num + value : calc.num,\r\n    });\r\n  };\r\n\r\n  const signClickHandler = (e) => {\r\n    e.preventDefault();\r\n    const value = e.target.innerHTML;\r\n\r\n    setCalc({\r\n      ...calc,\r\n      sign: value,\r\n      res: !calc.res && calc.num ? calc.num : calc.res,\r\n      num: 0,\r\n    });\r\n  };\r\n\r\n  const equalsClickHandler = () => {\r\n    if (calc.sign && calc.num) {\r\n      const math = (a, b, sign) => {\r\n        let result = 0;\r\n        switch (sign) {\r\n          case \"+\":\r\n            result = a + b;\r\n            break;\r\n          case \"-\":\r\n            result = a - b;\r\n            break;\r\n          case \"X\":\r\n            result = a * b;\r\n            break;\r\n          case \"/\":\r\n            result = a / b;\r\n            break;\r\n        }\r\n        console.log(result);\r\n        return result;\r\n      };\r\n\r\n      setCalc({\r\n        ...calc,\r\n        res:\r\n          calc.num === \"0\" && calc.sign === \"/\"\r\n            ? \"Can't divide with 0\"\r\n            : toLocaleString(\r\n                math(\r\n                  Number(removeSpaces(calc.res)),\r\n                  Number(removeSpaces(calc.num)),\r\n                  calc.sign\r\n                )\r\n              ),\r\n        sign: \"\",\r\n        num: 0,\r\n      });\r\n    }\r\n  };\r\n\r\n  const invertClickHandler = () => {\r\n    setCalc({\r\n      ...calc,\r\n      num: calc.num ? toLocaleString(removeSpaces(calc.num) * -1) : 0,\r\n      res: calc.res ? toLocaleString(removeSpaces(calc.res) * -1) : 0,\r\n      sign: \"\",\r\n    });\r\n  };\r\n\r\n  const percentClickHandler = () => {\r\n    let num = calc.num ? parseFloat(removeSpaces(calc.num)) : 0;\r\n    let res = calc.res ? parseFloat(removeSpaces(calc.res)) : 0;\r\n\r\n    setCalc({\r\n      ...calc,\r\n      num: (num /= 100),\r\n      res: (res /= 100),     \r\n      sign: \"\",\r\n    });\r\n  };\r\n\r\n  const resetClickHandler = () => {\r\n    setCalc({\r\n      ...calc,\r\n      sign: \"\",\r\n      num: 0,\r\n      res: 0,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Screen value={calc.num ? calc.num : calc.res} />\r\n      <ButtonBox>\r\n        {btnValues.flat().map((btn, i) => {\r\n          return (\r\n            <Button\r\n              key={i}\r\n              className={btn === \"=\" ? \"equals\" : \"\"}\r\n              value={btn}\r\n              onClick={\r\n                btn === \"C\"\r\n                  ? resetClickHandler\r\n                  : btn === \"+-\"\r\n                  ? invertClickHandler\r\n                  : btn === \"%\"\r\n                  ? percentClickHandler\r\n                  : btn === \"=\"\r\n                  ? equalsClickHandler\r\n                  : btn === \"/\" || btn === \"X\" || btn === \"-\" || btn === \"+\"\r\n                  ? signClickHandler\r\n                  : btn === \".\"\r\n                  ? commaClickHandler\r\n                  : numClickHandler\r\n              }\r\n            />\r\n          );\r\n        })}\r\n      </ButtonBox>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}